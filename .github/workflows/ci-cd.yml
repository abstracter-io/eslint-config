# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
# https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables
# https://discuss.circleci.com/t/conditional-expression-documentation/31227

name: Continuous Integration/Deployment

on:
  push:

env:
  # This set implicitly by GitHub, but I rather be explicit about it.
  CI: true

jobs:
  ci-cd:
    name: ci-cd

    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest

    env:
      npm_cache_key: node-modules-cache

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: true

      - name: Get node version
        run: echo "::set-output name=version::$(cat .nvmrc)"
        id: nvm

      - name: Setup node ${{ steps.nvm.outputs.version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ steps.nvm.outputs.version }}-${{ hashFiles('package.json') }}
          restore-keys: ${{ runner.os }}-node-${{ steps.nvm.outputs.version }}-

      - name: install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: lint
        run: npm run lint

      - name: build
        run: npm run build

      - name: fetch git tags
        run: git fetch --prune --unshallow --tags

      - name: release
        run: npm run release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE_ACTOR: abstracter-bot <bot@abstracter.io>
          GITHUB_PAT_TOKEN: ${{ secrets.BOT_PAT }}
