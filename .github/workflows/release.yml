name: Release

on:
  push:
    branches:
      - "**"

env:
  CI: true
  HUSKY: 0

jobs:
  release:
    name: Release

    # wait for a previous job to complete
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0
          persist-credentials: true

      # https://github.com/actions/setup-node
      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      # https://github.com/actions/cache
      - name: Cache node_modules
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: node_modules
          # include the branch name here...?
          key: node-modules-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package') }}

      - name: Install node_modules
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Lint Code
        run: npm run lint:all

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Lint Commit Messages
        run: |
          if [[ '${{github.event_name}}' == 'push' ]]; then
            npx commitlint --last --verbose
          elif [[ '${{github.event_name}}' == 'pull_request' ]]; then
            npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
          fi

      - name: Release
        run: npm run release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE_ACTOR: abstracter-bot <bot@abstracter.io>
          GITHUB_PAT_TOKEN: ${{ secrets.BOT_PAT }}
